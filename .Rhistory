geom_point(data = Fits[type == 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.55) +
theme_few() +
geom_vline(xintercept = 1.93, linetype = "dashed", alpha = 0.5) +
annotation_custom(grob = t, xmin = log10(15), xmax = log10(55), ymin = 4.25, ymax = 5.25) +
scale_y_log10() +
scale_x_log10() +
annotation_logticks(sides = "l", short = unit(0, "mm"), mid = unit(0, "mm")) +
annotation_logticks(sides = "b") +
scale_color_manual(values = c("#a50026", "#f4a582", "#313695", "#92c5de")) +
scale_shape_manual(values = c(16, 17, 18, 15)) +
xlab("maxmMd") +
ylab("BMD (uM)") +
guides(color = FALSE, shape = FALSE)
p3
tt <- ttheme_minimal(
core=list(fg_params = list(col = cols),
bg_params = list(col=NA)),
rowhead=list(bg_params = list(col=NA), fg_params = list(fontface = "bold")),
colhead=list(bg_params = list(col=NA)))
t <- tableGrob(bmd_table, theme = tt)
p3 <- ggplot(data = Fits, aes(x = MaxmMd, y = BMD)) +
geom_smooth(color = "black", alpha = 0.25) + #change acccordingly
geom_smooth(data = Fits[type == 1,], color = "red") +
geom_point(data = Fits[type != 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.55) +
geom_point(data = Fits[type == 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.55) +
theme_few() +
geom_vline(xintercept = 1.93, linetype = "dashed", alpha = 0.5) +
annotation_custom(grob = t, xmin = log10(15), xmax = log10(55), ymin = 4.25, ymax = 5.25) +
scale_y_log10() +
scale_x_log10() +
annotation_logticks(sides = "l", short = unit(0, "mm"), mid = unit(0, "mm")) +
annotation_logticks(sides = "b") +
scale_color_manual(values = c("#a50026", "#f4a582", "#313695", "#92c5de")) +
scale_shape_manual(values = c(16, 17, 18, 15)) +
xlab("maxmMd") +
ylab("BMD (uM)") +
guides(color = FALSE, shape = FALSE)
p3
bmd_table <- data.table("No Trend" = c(48, 308), "Trend" = c(3, 407))
row.names(bmd_table) <- c("maxmMd < Critical Value", "maxmMd > Critical Value")
cols <- matrix(c("#92c5de", "#f4a582", "#313695", "#a50026"), nrow(bmd_table), ncol(bmd_table))
tt <- ttheme_minimal(
core=list(fg_params = list(col = cols),
bg_params = list(col=NA)),
rowhead=list(bg_params = list(col=NA), fg_params = list(fontface = "bold")),
colhead=list(bg_params = list(col=NA)))
t <- tableGrob(bmd_table, theme = tt)
p3 <- ggplot(data = Fits, aes(x = MaxmMd, y = BMD)) +
geom_smooth(color = "black", alpha = 0.25) + #change acccordingly
geom_smooth(data = Fits[type == 1,], color = "red") +
geom_point(data = Fits[type != 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.55) +
geom_point(data = Fits[type == 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.55) +
theme_few() +
geom_vline(xintercept = 1.93, linetype = "dashed", alpha = 0.5) +
annotation_custom(grob = t, xmin = log10(15), xmax = log10(55), ymin = 4.25, ymax = 5.25) +
scale_y_log10() +
scale_x_log10() +
annotation_logticks(sides = "l", short = unit(0, "mm"), mid = unit(0, "mm")) +
annotation_logticks(sides = "b") +
scale_color_manual(values = c("#a50026", "#f4a582", "#313695", "#92c5de")) +
scale_shape_manual(values = c(16, 17, 18, 15)) +
xlab("maxmMd") +
ylab("BMD (uM)") +
guides(color = FALSE, shape = FALSE)
p3
tiff("maxmMd_by_BMD.tiff", width = 12, height = 8, units = "in", res = 300)
p3
dev.off()
pdf("maxmMd_by_BMD.pdf", width = 12, height = 8)
p3
dev.off()
p3 <- ggplot(data = Fits, aes(x = MaxmMd, y = BMD)) +
geom_smooth(color = "black", alpha = 0.25) + #change acccordingly
geom_smooth(data = Fits[type == 1,], color = "red") +
geom_point(data = Fits[type != 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
geom_point(data = Fits[type == 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
theme_few() +
geom_vline(xintercept = 1.93, linetype = "dashed", alpha = 0.5) +
annotation_custom(grob = t, xmin = log10(15), xmax = log10(55), ymin = 4.25, ymax = 5.25) +
scale_y_log10() +
scale_x_log10() +
annotation_logticks(sides = "l", short = unit(0, "mm"), mid = unit(0, "mm")) +
annotation_logticks(sides = "b") +
scale_color_manual(values = c("#a50026", "#f4a582", "#313695", "#92c5de")) +
scale_shape_manual(values = c(16, 17, 18, 15)) +
xlab("maxmMd") +
ylab("BMD (uM)") +
guides(color = FALSE, shape = FALSE)
tiff("maxmMd_by_BMD.tiff", width = 12, height = 8, units = "in", res = 300)
p3
dev.off()
pdf("maxmMd_by_BMD.pdf", width = 12, height = 8)
p3
dev.off()
p3 <- ggplot(data = Fits, aes(x = MaxmMd, y = BMD)) +
geom_smooth(color = "black", alpha = 0.25) + #change acccordingly
geom_point(data = Fits[type != 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
geom_point(data = Fits[type == 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
theme_few() +
annotation_custom(grob = t, xmin = log10(15), xmax = log10(55), ymin = 4.25, ymax = 5.25) +
scale_y_log10() +
scale_x_log10() +
annotation_logticks(sides = "l", short = unit(0, "mm"), mid = unit(0, "mm")) +
annotation_logticks(sides = "b") +
scale_color_manual(values = c("#a50026", "#f4a582", "#313695", "#92c5de")) +
scale_shape_manual(values = c(16, 17, 18, 15)) +
xlab("maxmMd") +
ylab("BMD (uM)") +
guides(color = FALSE, shape = FALSE)
p3
tiff("maxmMd_by_BMD.tiff", width = 12, height = 8, units = "in", res = 300)
p3
dev.off()
pdf("maxmMd_by_BMD.pdf", width = 12, height = 8)
p3
dev.off()
rm(list = ls())
library(reshape2)
library(grid)
library(gridExtra)
library(ggplot2)
library(GGally)
library(stringr)
library(data.table)
library(ggthemes)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(ggiraphExtra)
library(corrplot)
library(cowplot)
library(ComplexHeatmap)
library(circlize)
library(raster)
load("../RData/AllResps2017-08-09.RData")
load("../RData/Global_ANOVA_2017-08-09.RData")
colnames(Dists)[4] <- "date_chnm_plate"
Dists[, date_chnm_plate := as.character(date_chnm_plate)]
for(x in unique(Dists$date_chnm_plate)){
Dists[date_chnm_plate == x, c("Scrit05", "Scrit01") := .(Mahalanobis_dat[date_chnm_plate == x, Scrit05], Mahalanobis_dat[date_chnm_plate == x, Scrit01])]
}
#-------------------------------------------------------------------------------------------------#
#-----combine dat_mean and Dists
#-------------------------------------------------------------------------------------------------#
dat <- dat[, c(2,3, 15:19, 9:10, 6:8, 14)]
dat_wide <- dcast.data.table(dat, ... ~ steroid, value.var = "uM")
dat_wide[, c("D11P", "Scrit05", "Scrit01") := 0]
dat_wide_DMSO <- dat_wide[chnm == "DMSO",]
dat_wide_chems <- dat_wide[chnm != "DMSO",]
for(x in unique(dat_wide_chems[, date_chnm_plate])){
for(y in unique(dat_wide_chems[date_chnm_plate == x, conc])){
dat_wide_chems[date_chnm_plate == x & conc == y, c("D11P", "Scrit05", "Scrit01") := .(Dists[date_chnm_plate == x & Conc == y, D11P],
Dists[date_chnm_plate == x & Conc == y, Scrit05],
Dists[date_chnm_plate == x & Conc == y, Scrit01])]
}
}
dat_combined_wide <- rbind(dat_wide_chems, dat_wide_DMSO)
#-------------------------------------------------------------------------------------------------#
#-----Housekeeping: look at the number of chemicals with missing concs due to viability or NR
#-------------------------------------------------------------------------------------------------#
conc_counter <- dat_combined_wide[chnm != "DMSO", .(date_chnm_plate = date_chnm_plate, N = length(unique(conc))), by = "date_chnm_plate"]
conc_counter[N == 0, .N]#0
conc_counter[N == 1, .N]#0
conc_counter[N == 2, .N]#4
conc_counter[N == 3, .N]#5
conc_counter[N == 4, .N]#6
conc_counter[N == 5, .N]#36
conc_counter[N == 6, .N]#715
#-------------------------------------------------------------------------------------------------#
#-----Convert to long format for plotting
#-------------------------------------------------------------------------------------------------#
dat_combined <- melt.data.table(dat_combined_wide, id.vars = colnames(dat_combined_wide)[c(1:11, 24:25)], value.name = "Value", variable.name = "Measurement")
#-------------------------------------------------------------------------------------------------#
#-------drop the NAs which show up due to NR values in the raw data
#-------------------------------------------------------------------------------------------------#
dat_combined <- dat_combined[!is.na(Value),]
#-------------------------------------------------------------------------------------------------#
#-----Fix the levels of the Measurement factors
#-------------------------------------------------------------------------------------------------#
dat_combined[Measurement == "D11P", Measurement := "Mahalanobis Distance",]
#-------------------------------------------------------------------------------------------------#
#-----Fix Measurement labels
#-------------------------------------------------------------------------------------------------#
dat_combined[Measurement == "OH-Progesterone", Measurement := "OHPROG"]
dat_combined[Measurement == "OH-Pregnenolone", Measurement := "OHPREG"]
dat_combined[Measurement == "Progesterone", Measurement := "PROG"]
dat_combined[Measurement == "Pregnenolone", Measurement := "PREG"]
dat_combined[Measurement == "Androstenedione", Measurement := "ANDR"]
dat_combined[Measurement == "11-deoxycortisol", Measurement := "11DCORT"]
dat_combined[Measurement == "Testosterone", Measurement := "TESTO"]
dat_combined[Measurement == "Corticosterone", Measurement := "CORTIC"]
dat_combined[Measurement == "Estrone", Measurement := "ESTRONE"]
dat_combined[Measurement == "Estradiol", Measurement := "ESTRADIOL"]
dat_combined[Measurement == "Cortisol", Measurement := "CORTISOL"]
dat_combined[, Measurement := factor(Measurement, levels = c("OHPREG", "PROG", "OHPROG",
"DOC", "CORTIC", "11DCORT", "CORTISOL",
"ANDR", "TESTO", "ESTRONE", "ESTRADIOL", "Mahalanobis Distance"))]
ANOVA_summary_out_long[steroid == "OH-Progesterone", steroid := "OHPROG"]
ANOVA_summary_out_long[steroid == "OH-Pregnenolone", steroid := "OHPREG"]
ANOVA_summary_out_long[steroid == "Progesterone", steroid := "PROG"]
ANOVA_summary_out_long[steroid == "Pregnenolone", steroid := "PREG"]
ANOVA_summary_out_long[steroid == "Androstenedione", steroid := "ANDR"]
ANOVA_summary_out_long[steroid == "11-deoxycortisol", steroid := "11DCORT"]
ANOVA_summary_out_long[steroid == "Testosterone", steroid := "TESTO"]
ANOVA_summary_out_long[steroid == "Corticosterone", steroid := "CORTIC"]
ANOVA_summary_out_long[steroid == "Estrone", steroid := "ESTRONE"]
ANOVA_summary_out_long[steroid == "Estradiol", steroid := "ESTRADIOL"]
ANOVA_summary_out_long[steroid == "Cortisol", steroid := "CORTISOL"]
#-------------------------------------------------------------------------------------------------#
#-----Clean up ANOVA table
#-------------------------------------------------------------------------------------------------#
ANOVA_summary_out_long[, date_chnm_plate := str_replace(date_chnm_plate, "PharmaGSID_", "PharmaGSID")]
ANOVA_summary_out_long[conc >= 99.9, conc := 100]
ANOVA_summary_out_long[str_detect(date_chnm_plate,"Triclosan") & conc == 0.004115226, conc := 0.004]
ANOVA_summary_out_long[, conc := signif(conc, digits = 2)]
#-------------------------------------------------------------------------------------------------#
#-----Add p-value information to dat0_combined to annotate significant effects in plots
#-------------------------------------------------------------------------------------------------#
ANOVA_summary_out_long[is.na(PValue), PValue := 2]
dat_combined[, Pvalue := 1]
for(x in unique(dat_combined[chnm != "DMSO", date_chnm_plate])){
for(z in unique(dat_combined[date_chnm_plate == x & Measurement != "Mahalanobis Distance", Measurement])){
for(y in unique(dat_combined[date_chnm_plate == x & Measurement == z & chnm != "DMSO", conc])){
dat_combined[date_chnm_plate == x & conc == y & Measurement == z, Pvalue := ANOVA_summary_out_long[date_chnm_plate == x & conc == y & steroid == z, PValue]]
}
}
}
dat_combined <- dat_combined[Pvalue != 2,]
dat_combined[, sig := factor(ifelse(Pvalue <= 0.05, 1, 0))]
dat_combined[,conc_index := factor(conc_index, levels = c("CONC6", "CONC5", "CONC4", "CONC3", "CONC2", "CONC1"))]
#-------------------------------------------------------------------------------------------------#
#-----Generate fold-change of H295R response data relative to plate-wise DMSO samples
#-------------------------------------------------------------------------------------------------#
dmso_block_average <- dat_combined[chnm == "DMSO", .(plate_dmso = mean(Value)), by = .(Measurement, date_chnm_plate)]
dmso_block_average <- dmso_block_average[Measurement != "Mahalanobis Distance",]
dmso_block_average[, date_plate := str_replace(date_chnm_plate, "_DMSO_", "_")]
dat_radar <- copy(dat_combined)
dat_radar[, date_plate := paste(date, plate, sep = "_")]
for(x in unique(as.character(dat_radar[Measurement != "Mahalanobis Distance", Measurement]))){
for(block in unique(dat_radar[chnm != "DMSO", date_plate])){
for(y in unique(dat_radar[date_plate == block, date_chnm_plate]))
dat_radar[Measurement == x & date_plate == block & date_chnm_plate == y, fold_change := Value/dmso_block_average[Measurement == x & date_plate == block, plate_dmso]]
}
}
dat_radar[, log_fold_change := log2(fold_change)]
#dat_radar[, log_fold_change := log10(fold_change)]
#-------------------------------------------------------------------------------------------------#
#-----Look at recall sensitivity and maxmMd of replicated chemicals
#-------------------------------------------------------------------------------------------------#
rep_chems <- unique(Mahalanobis_dat[duplicated(casn), casn])
#-------------------------------------------------------------------------------------------------#
#-----filter OECD_ANOVA_filter_wide by the replicated chemicals
#-------------------------------------------------------------------------------------------------#
rep_OECD_anova <- OECD_ANOVA_filter_wide[casn %in% rep_chems, -1]
rep_OECD_anova_recall <- vector("list", 107)
names(rep_OECD_anova_recall) <- unique(rep_OECD_anova[,chnm])
for(x in unique(rep_OECD_anova[,chnm])){
rep_OECD_anova_recall[[x]] <- data.table(chnm = x, casn = unique(rep_OECD_anova[chnm == x, casn]), rep_OECD_anova[chnm == x,lapply(.SD, function(n) sum(n)/rep_OECD_anova[chnm == x, .N]), .SDcols = colnames(rep_OECD_anova)[c(-12, -13)]])
}
rep_OECD_anova_recall <- do.call(rbind, rep_OECD_anova_recall)
#any replicates that matched with no significant effects will have a zero value, change this to 1 to reflect a correct match
#for tripicate chemicals, a 2/3 agreement is considered a positive match
rep_OECD_anova_recall[rep_OECD_anova_recall == 0] <- 1
rep_OECD_anova_recall[rep_OECD_anova_recall < 0.6] <- 0
rep_OECD_anova_recall[, ave_chem_recall := (rowSums(.SD)/11)*100, .SDcols = colnames(rep_OECD_anova_recall)[c(-1, -2)]]
View(dat)
rep_maxmMd <- Mahalanobis_dat[casn %in% rep_chems,]
rep_maxmMd[, adj_maxmMd := maxD11P - Scrit01]
rep_maxmMd <- rep_maxmMd[order(maxD11P)]
rep_maxmMd[adj_maxmMd > 0, hitc := 1]
rep_maxmMd[adj_maxmMd < 0, hitc := 0]
for(x in unique(rep_maxmMd[, chnm])){
rep_maxmMd[chnm == x, CV := cv(rep_maxmMd[chnm == x, maxD11P])]
rep_maxmMd[chnm == x, log_SD := sd(log(rep_maxmMd[chnm == x, maxD11P]))]
rep_maxmMd[chnm == x, log_mean := mean((rep_maxmMd[chnm == x, maxD11P]))]
rep_maxmMd[chnm == x, geo_mean := exp(mean(log(rep_maxmMd[chnm == x, maxD11P])))]
}
maxmMd_lm <- summary(lm(log(maxD11P) ~ 0 + chnm, data = rep_maxmMd)) #0.33 is the residual st. error
maxmMd_lm
maxmMd_plot <- ggplot(data = rep_maxmMd, aes(x = maxD11P, y = reorder(chnm, maxD11P), shape = factor(hitc))) +
geom_point() +
annotate("text", x = 1.1, y = 103, label = "Residual Standard Deviation = 0.33", size = 7, hjust = "left") +
scale_x_log10(name = "maxmMd") +
#scale_x_continuous(trans = "log") +
annotation_logticks(sides = "b") +
ylab("") +
scale_shape_manual(values = c(1, 16)) +
theme_few() +
theme(legend.position = "none") +
theme(axis.title.x = element_text(size = 20))
maxmMd_plot
pdf(paste0("replicated_maxmMd_plot_log_", Sys.Date(), ".pdf"), width = 12, height = 15)
maxmMd_plot
dev.off()
rep_maxmMd_diff <- rep_maxmMd[, .(maxmMd = max(maxD11P), minmMd = min(maxD11P), log_SD = min(log_SD)), by = .(chnm)]
maxmMd_diff_histo <- ggplot(data = rep_maxmMd_diff, aes(x = log_SD)) +
geom_histogram(binwidth = 0.03) +
geom_vline(xintercept = 0.3308, linetype = "dashed") +
#scale_x_log10() +
theme_few() +
xlab("Standard Deviation of ln(maxmMd)") +
scale_x_continuous(limits = c(0, 1.5), breaks = c(0, 0.5, 1), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 15), expand = c(0,0)) +
ylab("Count") +
theme(axis.title = element_text(size = 18))
maxmMd_meanSD_plot <- ggplot(data = rep_maxmMd, aes(x = geo_mean, y = log_SD)) +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 0.3308, linetype = "dashed") +
theme_few() +
ylab("Standard Deviation of ln(maxmMd)") +
xlab("maxmMd") +
scale_x_continuous(trans = "log10", expand = c(0,0)) +
#scale_y_continuous(trans = "log") +
annotation_logticks(sides = "b") +
theme(axis.title = element_text(size = 18))
plot_grid(maxmMd_diff_histo, maxmMd_meanSD_plot, labels = c("A.", "B."))
pdf(paste0("maxmMd_replicability_plots_supplement", Sys.Date(), ".pdf"), width = 12, height = 8)
plot_grid(maxmMd_diff_histo, maxmMd_meanSD_plot, labels = c("A.", "B."))
dev.off()
dev.off()
pdf(paste0("maxmMd_replicability_plots_supplement", Sys.Date(), ".pdf"), width = 12, height = 8)
plot_grid(maxmMd_diff_histo, maxmMd_meanSD_plot, labels = c("A.", "B."))
dev.off()
pdf(paste0("maxmMd_replicability_plots_supplement", Sys.Date(), ".pdf"), width = 12, height = 6)
plot_grid(maxmMd_diff_histo, maxmMd_meanSD_plot, labels = c("A.", "B."))
dev.off()
tiff(paste0("replicated_maxmMd_plot_log_", Sys.Date(), ".pdf"), width = 12, height = 15, units = "in", res = 300)
maxmMd_plot
dev.off()
pdf(paste0("replicated_maxmMd_plot_log_", Sys.Date(), ".pdf"), width = 12, height = 15)
maxmMd_plot
dev.off()
tiff(paste0("replicated_maxmMd_plot_log_", Sys.Date(), ".tiff"), width = 12, height = 15, units = "in", res = 300)
maxmMd_plot
dev.off()
library(Halloween)
library(Halloween_2017_Costume)
costume
?parms
?optim
load("../RData/AllResps_outliersRemoved2017-08-09.rdata")
load("L:/Lab/NCCT_ToxCast/Derik Haggard/OECD Analysis/R Scripts for Pub/RData/mMdFits.RData")
View(Fits)
ChemNames <- unique(Mahalanobis_dat$date_chnm_plate)
DS <- lapply(ChemNames, function(nm) {
ds <- Dists[Dists$CA == nm,]
list(lx = log(ds$Conc),
y = ds$D11P,
Scrit01 = Mahalanobis_dat[Mahalanobis_dat$date_chnm_plate == nm,"Scrit01"],
MaxmMd = Mahalanobis_dat[Mahalanobis_dat$date_chnm_plate == nm,"maxD11P"]
)
})
parms[1]
logistic4par  <- function(lx, T, cc, d) {
(1 + (cc - 1) / (1 + exp(-d * lx + T)))
}
BMD <- function(Z, T, cc, d) {
lD <- (log((cc - 1) / (Z - 1) - 1) - T) / (- d)
if (Z > cc | d < 0.01) Inf else if (is.finite(lD)) exp(lD) else lD
}
dofit <- function(Dsnm) {
of <- function(parms) {
T <- parms[1]
cc <- exp(parms[2])
d <- exp(parms[3])
sum((DS[[Dsnm]]$y - logistic4par(DS[[Dsnm]]$lx, T, cc, d))^2)
}
Spcor <- cor(DS[[Dsnm]]$y, DS[[Dsnm]]$lx, method="spearman")
Spcortest <- cor.test(DS[[Dsnm]]$y, DS[[Dsnm]]$lx, method="spearman")$p.value
out <- optim(c(0, 1, 0), of, control=list(maxit=2000))
Parms <- c(T = out$par[1], cc = exp(out$par[2]), d = exp(out$par[3]))
list(Parms=Parms, BMD=unname(BMD(DS[[Dsnm]]$Scrit01, Parms[1], Parms[2], Parms[3])),
MaxmMd = DS[[Dsnm]]$MaxmMd, Scrit = DS[[Dsnm]]$Scrit01,
cor=Spcor, cor_pvalue=Spcortest,
convergence = out$convergence, Name = Dsnm)
}
doplots <- function(zz) {
pdta1 <- data.frame(Concentration = exp(DS[[zz[["Name"]]]]$lx),
mMd = DS[[zz[["Name"]]]]$y)
xmin <- if(is.finite(zz$BMD) & zz$BMD > 0) min(c(DS[[zz[["Name"]]]]$lx, log(zz$BMD))) else min(DS[[zz[["Name"]]]]$lx)
pdta2 <- data.frame(x = exp(z <- seq(xmin,
max(DS[[zz[["Name"]]]]$lx), length=300)),
y = logistic4par(z, zz$Parms["T"], zz$Parms["cc"], zz$Parms["d"]))
p <- ggplot() +
geom_point(data=pdta1, aes(x = Concentration, y=mMd)) +
geom_line(data=pdta2, aes(x=x, y=y)) +
annotate(geom="segment", x=min(pdta2$x), xend=zz$BMD, y=zz$Scrit, yend=zz$Scrit,
lty=2, color=brewer.pal(5, "YlGnBu")[3]) +
annotate(geom="segment", x=zz$BMD, xend=zz$BMD, y=zz$Scrit, yend=0,
color=brewer.pal(5, "YlGnBu")[3]) +
scale_x_log10() +
ggtitle(zz[["Name"]])
p
}
DS
?sum
exp( 4.6051702)
94/107
rm(list = ls())
library(parallel)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(grid)
library(gridExtra)
library(ggplot2)
library(GGally)
library(stringr)
library(data.table)
library(ggthemes)
library(dplyr)
library(cowplot)
setwd("./Mahalanobis Distance")
load("L:/Lab/NCCT_ToxCast/Derik Haggard/OECD Analysis/R Scripts for Pub/RData/mMdFits.RData")
Fits <- as.data.table(Fits)
Fits[MaxmMd >= Scrit & cor_pvalue <= 0.05, type := 1] #maxmMd over critical value and trend
Fits[MaxmMd >= Scrit & cor_pvalue >= 0.05, type := 2] #maxmMd over critical value but no trend
Fits[MaxmMd <= Scrit & cor_pvalue <= 0.05, type := 3] #maxmMd below critical value and trend
Fits[MaxmMd <= Scrit & cor_pvalue >= 0.05, type := 4] #maxmMd below critical value but no trend
#correct for small and infinite BMDs
Fits[BMD >= 150, BMD := 1e03]
Fits[BMD <= 1e-03, BMD := 1e-04]
#make table and table Grob
bmd_table <- data.table("No Trend" = c(48, 308), "Trend" = c(3, 407))
row.names(bmd_table) <- c("maxmMd < Critical Value", "maxmMd > Critical Value")
cols <- matrix(c("#92c5de", "#f4a582", "#313695", "#a50026"), nrow(bmd_table), ncol(bmd_table))
tt <- ttheme_minimal(
core=list(fg_params = list(col = cols),
bg_params = list(col=NA)),
rowhead=list(bg_params = list(col=NA), fg_params = list(fontface = "bold")),
colhead=list(bg_params = list(col=NA)))
t <- tableGrob(bmd_table, theme = tt)
#-------------------------------------------------------------------------------------------------#
#-----Figure 9
#-------------------------------------------------------------------------------------------------#
p3 <- ggplot(data = Fits, aes(x = MaxmMd, y = BMD)) +
geom_smooth(color = "black", alpha = 0.25) + #change acccordingly
geom_point(data = Fits[type != 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
geom_point(data = Fits[type == 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
theme_few() +
annotation_custom(grob = t, xmin = log10(15), xmax = log10(55), ymin = 4.25, ymax = 5.25) +
scale_y_log10() +
scale_x_log10() +
annotation_logticks(sides = "l", short = unit(0, "mm"), mid = unit(0, "mm")) +
annotation_logticks(sides = "b") +
scale_color_manual(values = c("#a50026", "#f4a582", "#313695", "#92c5de")) +
scale_shape_manual(values = c(16, 17, 18, 15)) +
xlab("maxmMd") +
ylab("BMD (uM)") +
guides(color = FALSE, shape = FALSE) +
theme(axis.title = element_text(size = 14))
p3
tiff("maxmMd_by_BMD.tiff", width = 12, height = 8, units = "in", res = 300)
p3
dev.off()
pdf("maxmMd_by_BMD.pdf", width = 12, height = 8)
p3
dev.off()
p3 <- ggplot(data = Fits, aes(x = MaxmMd, y = BMD)) +
geom_smooth(color = "black", alpha = 0.25) + #change acccordingly
geom_point(data = Fits[type != 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
geom_point(data = Fits[type == 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
theme_few() +
annotation_custom(grob = t, xmin = log10(15), xmax = log10(55), ymin = 4.25, ymax = 5.25) +
scale_y_log10() +
scale_x_log10() +
annotation_logticks(sides = "l", short = unit(0, "mm"), mid = unit(0, "mm")) +
annotation_logticks(sides = "b") +
scale_color_manual(values = c("#a50026", "#f4a582", "#313695", "#92c5de")) +
scale_shape_manual(values = c(16, 17, 18, 15)) +
xlab("maxmMd") +
ylab("BMD (uM)") +
guides(color = FALSE, shape = FALSE) +
theme(axis.title = element_text(size = 16))
p3
tiff("Fig9_maxmMd_by_BMD.tiff", width = 12, height = 8, units = "in", res = 300)
p3
dev.off()
pdf("Fig9_maxmMd_by_BMD.pdf", width = 12, height = 8)
p3
dev.off()
p3 <- ggplot(data = Fits, aes(x = MaxmMd, y = BMD)) +
geom_smooth(color = "black", alpha = 0.25) + #change acccordingly
geom_point(data = Fits[type != 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
geom_point(data = Fits[type == 3], aes(color = factor(type), shape = factor(type)), size = 3, alpha = 0.5) +
theme_few() +
annotation_custom(grob = t, xmin = log10(15), xmax = log10(55), ymin = 4.25, ymax = 5.25) +
scale_y_log10() +
scale_x_log10() +
annotation_logticks(sides = "l", short = unit(0, "mm"), mid = unit(0, "mm")) +
annotation_logticks(sides = "b") +
scale_color_manual(values = c("#a50026", "#f4a582", "#313695", "#92c5de")) +
scale_shape_manual(values = c(16, 17, 18, 15)) +
xlab("maxmMd") +
ylab("BMD (uM)") +
guides(color = FALSE, shape = FALSE) +
theme(axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16))
p3
tiff("Fig9_maxmMd_by_BMD.tiff", width = 12, height = 8, units = "in", res = 300)
p3
dev.off()
pdf("Fig9_maxmMd_by_BMD.pdf", width = 12, height = 8)
p3
dev.off()
exp(0.66)
3.5/1.93
3.5*1.93
1.81+1.93
3.74+1.93
